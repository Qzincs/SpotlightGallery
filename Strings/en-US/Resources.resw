<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyButton.Content" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="AppTitle.Text" xml:space="preserve">
    <value>Spotlight Gallery</value>
  </data>
  <data name="Favorites.Content" xml:space="preserve">
    <value>Favorites</value>
    <comment>Favorites Page</comment>
  </data>
  <data name="History.Content" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Home.Content" xml:space="preserve">
    <value>Home</value>
    <comment>Home Page</comment>
  </data>
  <data name="NextImageButton.Content" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="SettingsPageHeader.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Features.Text" xml:space="preserve">
    <value>Features</value>
  </data>
  <data name="WallpaperSource.Header" xml:space="preserve">
    <value>Wallpaper Source</value>
  </data>
  <data name="WindowsSpotlight.Content" xml:space="preserve">
    <value>Windows Spotlight</value>
  </data>
  <data name="Bing.Content" xml:space="preserve">
    <value>Bing</value>
  </data>
  <data name="ImageResolution.Header" xml:space="preserve">
    <value>Image Resolution</value>
  </data>
  <data name="AutoUpdate.Header" xml:space="preserve">
    <value>Auto Update</value>
  </data>
  <data name="AutoUpdate.Description" xml:space="preserve">
    <value>Automatically update wallpaper on schedule</value>
  </data>
  <data name="UpdateMode.Header" xml:space="preserve">
    <value>Update Mode</value>
  </data>
  <data name="Daily.Content" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="Every12Hours.Content" xml:space="preserve">
    <value>Every 12 hours</value>
  </data>
  <data name="AtSpecificTime.Content" xml:space="preserve">
    <value>At specific time</value>
  </data>
  <data name="UpdateTime.Header" xml:space="preserve">
    <value>Update Time</value>
  </data>
  <data name="AutoSave.Header" xml:space="preserve">
    <value>Auto Save</value>
  </data>
  <data name="AutoSave.Description" xml:space="preserve">
    <value>Automatically save wallpapers to your selected folder</value>
  </data>
  <data name="OpenFolder.Content" xml:space="preserve">
    <value>Open Folder</value>
  </data>
  <data name="Change.Content" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="MaxStorage.Header" xml:space="preserve">
    <value>Maximum Storage</value>
  </data>
  <data name="MaxStorage.Description" xml:space="preserve">
    <value>Set maximum space for saved wallpapers, will auto-clean when exceeded</value>
  </data>
  <data name="Unlimited.Content" xml:space="preserve">
    <value>Unlimited</value>
  </data>
  <data name="Appearance.Text" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="AppTheme.Header" xml:space="preserve">
    <value>App Theme</value>
  </data>
  <data name="LightTheme.Content" xml:space="preserve">
    <value>Light Theme</value>
  </data>
  <data name="DarkTheme.Content" xml:space="preserve">
    <value>Dark Theme</value>
  </data>
  <data name="UseSystemSetting.Content" xml:space="preserve">
    <value>Use System Setting</value>
  </data>
  <data name="DisplayLanguage.Header" xml:space="preserve">
    <value>Display Language</value>
  </data>
  <data name="Chinese.Content" xml:space="preserve">
    <value>中文</value>
  </data>
  <data name="English.Content" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="About.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AppDescription.Description" xml:space="preserve">
    <value>A simple wallpaper app built with WinUI3</value>
  </data>
  <data name="OpenSource.Header" xml:space="preserve">
    <value>Open Source</value>
  </data>
  <data name="OpenSource.Description" xml:space="preserve">
    <value>This is an open source project, contributions and suggestions are welcome</value>
  </data>
  <data name="ProjectHome.Content" xml:space="preserve">
    <value>Project Home</value>
  </data>
  <data name="License.Content" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="Feedback.Content" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="CopyrightNotice.Header" xml:space="preserve">
    <value>Image Copyright Notice</value>
  </data>
  <data name="CopyrightNotice.Description" xml:space="preserve">
    <value>All images displayed in this app are for personal wallpaper use only, their copyrights belong to original authors or copyright holders</value>
  </data>
  <data name="DebugLog.Header" xml:space="preserve">
    <value>Debug Log</value>
  </data>
  <data name="DebugLog.Description" xml:space="preserve">
    <value>Enable to record detailed debug logs for troubleshooting</value>
  </data>
  <data name="LocaleOption_Australia.Content" xml:space="preserve">
    <value>Australia</value>
  </data>
  <data name="LocaleOption_Brazil.Content" xml:space="preserve">
    <value>Brazil</value>
  </data>
  <data name="LocaleOption_China.Content" xml:space="preserve">
    <value>China</value>
  </data>
  <data name="LocaleOption_Canada.Content" xml:space="preserve">
    <value>Canada</value>
  </data>
  <data name="LocaleOption_France.Content" xml:space="preserve">
    <value>France</value>
  </data>
  <data name="LocaleOption_Germany.Content" xml:space="preserve">
    <value>Germany</value>
  </data>
  <data name="LocaleOption_India.Content" xml:space="preserve">
    <value>India</value>
  </data>
  <data name="LocaleOption_Italy.Content" xml:space="preserve">
    <value>Italy</value>
  </data>
  <data name="LocaleOption_Japan.Content" xml:space="preserve">
    <value>Japan</value>
  </data>
  <data name="LocaleOption_NewZealand.Content" xml:space="preserve">
    <value>New Zealand</value>
  </data>
  <data name="LocaleOption_Spain.Content" xml:space="preserve">
    <value>Spain</value>
  </data>
  <data name="LocaleOption_UK.Content" xml:space="preserve">
    <value>United Kingdom</value>
  </data>
  <data name="LocaleOption_US.Content" xml:space="preserve">
    <value>United States</value>
  </data>
  <data name="WallpaperLocale.Header" xml:space="preserve">
    <value>Wallpaper Region</value>
  </data>
  <data name="WallpaperLocale.Description" xml:space="preserve">
    <value>Wallpaper content may vary by region</value>
  </data>
  <data name="FolderNotFoundDialog_Title" xml:space="preserve">
    <value>Directory Not Found</value>
  </data>
  <data name="FolderNotFoundDialog_Content" xml:space="preserve">
    <value>The auto-save directory does not exist. Please change the save directory first.</value>
  </data>
  <data name="FolderNotFoundDialog_Button" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Toast_WallpaperUpdated_Title" xml:space="preserve">
    <value>Wallpaper Updated</value>
  </data>
  <data name="Toast_WallpaperUpdated_Content" xml:space="preserve">
    <value>Today's wallpaper is {0}.</value>
  </data>
  <data name="Toast_WallpaperUpdateFailed_Title" xml:space="preserve">
    <value>Wallpaper Update Failed</value>
  </data>
  <data name="Toast_WallpaperUpdateFailed_Content" xml:space="preserve">
    <value>Please check your network connection.</value>
  </data>
  <data name="LanguageChangeDialog_Title" xml:space="preserve">
    <value>Restart Required</value>
  </data>
  <data name="LanguageChangeDialog_Content" xml:space="preserve">
    <value>The app needs to restart to apply the language change. Restart now?</value>
  </data>
  <data name="LanguageChangeDialog_PrimaryButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="LanguageChangeDialog_CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
</root>